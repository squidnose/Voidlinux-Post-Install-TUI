#!/bin/bash



#==================================== Apps ====================================


#================ Internet ================
discord() {
flatpak install -y flathub com.discordapp.Discord
}
transmission() {
echo "This script will install the Transmission BitTorrent client."
echo "Please choose your preferred toolkit version:"
echo "  1) Transmission-GTK (integrates well with GTK-based desktops like GNOME, XFCE, Cinnamon, MATE)"
echo "  2) Transmission-Qt (integrates well with Qt-based desktops like KDE Plasma, LXQt)"
echo ""

# Loop until a valid choice is made
while true; do
    read -rp "Enter your choice (1 or 2): " choice
    case "$choice" in
        1)
            INSTALL_VERSION="gtk"
            break
            ;;
        2)
            INSTALL_VERSION="qt"
            break
            ;;
        *)
            echo "Invalid choice. Please enter 1 or 2."
            ;;
    esac
done

echo "" # Blank line for readability

# --- Execute Installation Based on Choice ---

if [ "$INSTALL_VERSION" == "gtk" ]; then
    echo "Attempting to install Transmission-GTK..."
    if command -v xbps-install &>/dev/null; then
        sudo xbps-install -y transmission-gtk
        if [ $? -eq 0 ]; then
            echo "Transmission-GTK installation complete!"
        else
            echo "Error: Transmission-GTK installation failed."
            echo "Please check your internet connection or try updating XBPS repositories (sudo xbps-install -Sy)."
        fi
    else
        echo "Error: 'xbps-install' command not found. This should not happen on Void Linux."
        echo "Please verify your system's package manager setup."
    fi
elif [ "$INSTALL_VERSION" == "qt" ]; then
    echo "Attempting to install Transmission-Qt..."
    if command -v xbps-install &>/dev/null; then
        sudo xbps-install -y transmission-qt
        if [ $? -eq 0 ]; then
            echo "Transmission-Qt installation complete!"
        else
            echo "Error: Transmission-Qt installation failed."
            echo "Please check your internet connection or try updating XBPS repositories (sudo xbps-install -Sy)."
        fi
    else
        echo "Error: 'xbps-install' command not found. This should not happen on Void Linux."
        echo "Please verify your system's package manager setup."
    fi
fi

echo "" # Blank line for readability
echo "Transmission client script finished."

# Pause for user to see final messages before returning to main TUI
read -rp "Press Enter to return to the main menu."
}

#===============================================================================
# Void Linux Post-Install TUI - Whiptail Version
#===============================================================================

#------------------------------- Category Setup -------------------------------#

# Ordered categories
CATEGORIES=(
  "01.Internet"
  "02.Office-Work"
  "03.Photo-&-Paint"
  "04.Media"
  "05.Phone-Integration"
  "06.Remote-Connection"
  "07.Virtualization-and-Containerization"
  "08.Games"
  "09.SW-Config-and-Info"
  "10.HW-Config-and-Info"
  "11.Serial-Comms"
  "12.Non-Linux-apps"
  "13.Network-Utilities"
  "14.Programming"
)

# Apps per category
declare -A APP_CATEGORIES
APP_CATEGORIES["01.Internet"]="discord transmission firefox chromium"
APP_CATEGORIES["02.Office-Work"]="libreoffice onlyoffice thunderbird"
APP_CATEGORIES["03.Photo-&-Paint"]="gimp krita inkscape"
APP_CATEGORIES["04.Media"]="vlc mpv obs-studio"
APP_CATEGORIES["05.Phone-Integration"]="kdeconnect scrcpy"
APP_CATEGORIES["06.Remote-Connection"]="remmina teamviewer"
APP_CATEGORIES["07.Virtualization-and-Containerization"]="virtualbox qemu docker"
APP_CATEGORIES["08.Games"]="steam lutris heroic-games-launcher"
APP_CATEGORIES["09.SW-Config-and-Info"]="neofetch htop"
APP_CATEGORIES["10.HW-Config-and-Info"]="lm_sensors hardinfo"
APP_CATEGORIES["11.Serial-Comms"]="putty minicom"
APP_CATEGORIES["12.Non-Linux-apps"]="wine winetricks protonup"
APP_CATEGORIES["13.Network-Utilities"]="nmap wireshark"
APP_CATEGORIES["14.Programming"]="vscode geany gcc clang"

#------------------------------- Preset Setup --------------------------------#

declare -A APP_PRESETS
APP_PRESETS["recommended"]="discord firefox vlc libreoffice neofetch"
APP_PRESETS["office"]="libreoffice onlyoffice thunderbird gimp inkscape"
APP_PRESETS["gaming"]="steam lutris heroic-games-launcher discord obs-studio"

#------------------------------- Functions -----------------------------------#

run_apps() {
    local apps=("$@")
    for app in "${apps[@]}"; do
        app=$(echo "$app" | tr -d '"')   # remove quotes
        if declare -f "$app" >/dev/null; then
            echo ">>> Running function: $app"
            "$app"
        else
            echo "!!! Function for $app not defined. Skipping."
        fi
    done
    read -rp "Press Enter to return to the menu."
}

choose_category() {
    local menu_items=(
        "0" "App Presets"
    )
    local i=1
    for cat in "${CATEGORIES[@]}"; do
        menu_items+=("$i" "$cat")
        ((i++))
    done

    whiptail --title "Void Linux Installer" \
        --menu "Choose a category:" 20 70 15 \
        "${menu_items[@]}" 3>&1 1>&2 2>&3
}

choose_apps_from_category() {
    local category="$1"
    local apps=(${APP_CATEGORIES[$category]})
    local checklist_items=()
    for app in "${apps[@]}"; do
        checklist_items+=("$app" "$app" OFF)
    done

    whiptail --title "$category" \
        --checklist "Select apps to install:" 20 70 15 \
        "${checklist_items[@]}" 3>&1 1>&2 2>&3
}

choose_preset() {
    local presets=()
    for preset in "${!APP_PRESETS[@]}"; do
        presets+=("$preset" "$preset")
    done

    whiptail --title "App Presets" \
        --menu "Choose a preset:" 15 50 5 \
        "${presets[@]}" 3>&1 1>&2 2>&3
}

#------------------------------- Main Loop -----------------------------------#

while true; do
    choice=$(choose_category) || break

    if [[ "$choice" == "0" ]]; then
        preset_choice=$(choose_preset) || continue
        apps_to_install=(${APP_PRESETS[$preset_choice]})
        run_apps "${apps_to_install[@]}"
    else
        index=$((choice-1))
        category="${CATEGORIES[$index]}"
        selected_apps=$(choose_apps_from_category "$category") || continue
        # whiptail returns quoted list like: "app1" "app2"
        selected_apps=($(echo $selected_apps))
        run_apps "${selected_apps[@]}"
    fi
done
